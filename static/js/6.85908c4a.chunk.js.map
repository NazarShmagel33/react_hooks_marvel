{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charSearchForm/charSearchForm.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getCharacterByName","name","res","results","map","_transformCharacter","getAllCharacters","_ref2","_callee2","offset","_args2","_context2","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","View","imgStyle","_jsxs","className","children","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setnewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","CSSTransition","timeout","classNames","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","TransitionGroup","component","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","CharSearchForm","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","Component","MainPage","selectedChar","Helmet","decoration"],"mappings":"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","file":"static/js/6.85908c4a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\n\nconst  useMarvelService = ()=> {\n\n    const {loading,request,error,clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\n    const _apiKey = 'apikey=814ba05196898ce25e13dc4c51ac87a5';\n\n    const _baseOffset= 610;\n\n\n\n    const getCharacterByName = async (name)=>{\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res= await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n   \n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        \n        return _transformCharacter(res.data.results[0]);   \n    }\n\n    const getAllComics = async (offset=0)=>{\n         const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n\n         return res.data.results.map(_transformComics);\n    }\n\n    const getComic = async (id)=>{\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n\n    const _transformCharacter= (char)=>{\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0,210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path+'.'+char.thumbnail.extension,\n            homepage: char.urls[0].urls,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        };\n    };\n\n    const _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\t// optional chaining operator\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n\n    return {loading,error,getCharacterByName,getAllCharacters,getCharacter,clearError,getAllComics,getComic}\n}\n\nexport default useMarvelService;","import { useState,useCallback } from \"react\";\r\n\r\nexport const useHttp = () =>{\r\n    \r\n    const [loading,setLoading]=useState(false);\r\n    const [error,setError]= useState(null);\r\n\r\n\r\n    const request = useCallback( async (url,method= \"GET\",body=null,headers={'Content-Type': 'application/json'})=>{\r\n\r\n        setLoading(true);\r\n\r\n        try{\r\n            const response = await fetch(url,{body,headers,method});\r\n            \r\n            if (!response.ok){\r\n                throw new Error(`Could not fetch ${url},status: ${response.status}`);\r\n            }\r\n            \r\n            const data =await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        }   catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    },[]);\r\n    \r\n    \r\n    const clearError = useCallback(()=>{\r\n        setError(null)\r\n    },[]);\r\n\r\n    return{loading,request,error,clearError}\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n    \n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = async(newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n        setCharList([...charList, ...newCharList]);\n        setnewItemLoading(false);\n        setOffset(offset + 9);\n        setCharEnded(ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems (arr){\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <CSSTransition key={item.id} timeout={500} classNames=\"char__item\">\n                    <li \n                        className=\"char__item\"\n                        tabIndex={0}\n                        ref={el => itemRefs.current[i] = el}\n                        onClick={() => {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }}\n                        onKeyPress={(e) => {\n                            if (e.key === ' ' || e.key === \"Enter\") {\n                                props.onCharSelected(item.id);\n                                focusOnItem(i);\n                            }\n                        }}>\n                            <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                            <div className=\"char__name\">{item.name}</div>\n                    </li>\n                </CSSTransition>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n    \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : charEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import {useState} from 'react';\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport {Link} from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charSearchForm.scss';\n\nconst CharSearchForm = () => {\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacterByName, clearError} = useMarvelService();\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = (name) => {\n        clearError();\n\n        getCharacterByName(name)\n            .then(onCharLoaded);\n    }\n\n    const errorMessage = error ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\n    const results = !char ? null : char.length > 0 ?\n                    <div className=\"char__search-wrapper\">\n                        <div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\n                        <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\n                            <div className=\"inner\">To page</div>\n                        </Link>\n                    </div> : \n                    <div className=\"char__search-error\">\n                        The character was not found. Check the name and try again\n                    </div>;\n\n    return (\n        <div className=\"char__search-form\">\n            <Formik\n                initialValues = {{\n                    charName: ''\n                }}\n                validationSchema = {Yup.object({\n                    charName: Yup.string().required('This field is required')\n                })}\n                onSubmit = { ({charName}) => {\n                    updateChar(charName);\n                }}\n            >\n                <Form>\n                    <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\n                    <div className=\"char__search-wrapper\">\n                        <Field \n                            id=\"charName\" \n                            name='charName' \n                            type='text' \n                            placeholder=\"Enter name\"/>\n                        <button \n                            type='submit' \n                            className=\"button button__main\"\n                            disabled={loading}>\n                            <div className=\"inner\">find</div>\n                        </button>\n                    </div>\n                    <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\n                </Form>\n            </Formik>\n            {results}\n            {errorMessage}\n        </div>\n    )\n}\n\nexport default CharSearchForm;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport CharSearchForm from '../charSearchForm/charSearchForm';\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n\n    const [selectedChar, setChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    }\n\n    return (\n        <>\n            <Helmet>\n                <meta\n                name='description'\n                content=\"Marvel information portal\"\n                />\n                <title>Marvel information</title>\n                \n            </Helmet>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected}/>\n                </ErrorBoundary>\n                <div>\n                    <ErrorBoundary>\n                        <CharInfo charId={selectedChar}/>\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                        <CharSearchForm/>\n                    </ErrorBoundary>\n                </div>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    )\n}\n\nexport default MainPage;"],"sourceRoot":""}